Description: Changes the dependency management to use the system jars when building
Author: Emmanuel Bourg <ebourg@apache.org>
Forwarded: not-needed
--- a/build.gradle
+++ b/build.gradle
@@ -1148,12 +1148,8 @@
     // closed gradle file instead.
     if (!BUILD_CLOSED) {
         repositories {
-            mavenCentral()
-            ivy {
-                url "http://download.eclipse.org/eclipse/updates/3.7/R-3.7.2-201202080800/plugins/"
-                layout "pattern", {
-                    artifact "[artifact].[ext]"
-                }
+            maven {
+                url "file:/usr/share/maven-repo"
             }
         }
     }
@@ -1161,7 +1157,7 @@
     // By default all of our projects require junit for testing so we can just
     // setup this dependency here.
     dependencies {
-        testCompile group: "junit", name: "junit", version: "4.8.2"
+        testCompile group: "junit", name: "junit", version: "4.x"
         if (BUILD_CLOSED && DO_JCOV)  {
             testCompile name: "jcov"
         }
@@ -1299,12 +1295,12 @@
 
     dependencies {
         compile project(":base"), BUILD_SRC
-        compile name: SWT_FILE_NAME
-        stubCompile group: "junit", name: "junit", version: "4.8.2",
+        compile files("/usr/share/java/swt-gtk-3.8.jar")
+        stubCompile group: "junit", name: "junit", version: "4.x",
         project(":base").sourceSets.test.output, sourceSets.main.output
-        antlr3 group: "org.antlr", name: "antlr", version: "3.1.3"
-        antlr3 group: "org.antlr", name: "antlr-runtime",  version: "3.1.3"
-        antlr3 group: "org.antlr", name: "stringtemplate", version: "3.2"
+        antlr3 group: "org.antlr", name: "antlr", version: "3.x"
+        antlr3 group: "org.antlr", name: "antlr-runtime",  version: "3.x"
+        antlr3 group: "org.antlr", name: "stringtemplate", version: "3.x"
     }
 
     // Create a single "native" task which will depend on all the individual native tasks for graphics
@@ -1594,9 +1590,9 @@
             copy {
                 into libsDir
                 from f.getParentFile()
-                include "**/antlr-3.1.3.jar"
-                include "**/stringtemplate-3.2.jar"
-                include "**/antlr-runtime-3.1.3.jar"
+                include "**/antlr-3.x.jar"
+                include "**/stringtemplate-3.x.jar"
+                include "**/antlr-runtime-3.x.jar"
                 includeEmptyDirs = false
             }
             // Have to rename the swt jar because it is some platform specific name but
@@ -1680,7 +1676,7 @@
     }
     dependencies {
         compile BUILD_SRC, project(":base"), project(":graphics")
-        compile name: SWT_FILE_NAME
+        compile files("/usr/share/java/swt-gtk-3.8.jar")
     }
 }
 
@@ -1779,7 +1775,7 @@
     }
 
     dependencies {
-        compile group: "org.apache.ant", name: "ant", version: "1.8.2"
+        compile group: "org.apache.ant", name: "ant", version: "debian"
     }
 
     // When producing the jar, we need to relocate a few class files
@@ -2043,13 +2039,13 @@
     classes << {
         // Copy all of the download libraries to libs directory for the sake of the IDEs
         File libsDir = rootProject.file("build/libs");
-        File antLib = new File(libsDir, "ant-1.8.2.jar")
+        File antLib = new File(libsDir, "ant-debian.jar")
         libsDir.mkdirs();
         for (File f : configurations.compile.files) {
             copy {
                 into libsDir
                 from f.getParentFile()
-                include "**/ant-1.8.2.jar"
+                include "**/ant-debian.jar"
                 includeEmptyDirs = false
             }
         }
@@ -2510,11 +2506,13 @@
         def compileNativeTask = task("compileNative${t.capital}", dependsOn: generateHeaders) << {
             println "Building Webkit configuration /$webkitConfig/ into $webkitOutputDir"
             
+/*
             def dependencyFile = configurations.webkit.filter(
                     { File f -> f.getName().contains(classifier) }
                 ).getSingleFile()
             ant.unzip(src:  dependencyFile,
                       dest: webkitOutputDir)
+*/
 
             exec {
                 workingDir("$projectDir/src/main/native")
--- a/buildSrc/build.gradle
+++ b/buildSrc/build.gradle
@@ -66,7 +66,9 @@
             }
         }
     } else {
-        mavenCentral()
+        maven {
+            url "file:/usr/share/maven-repo"
+        }
     }
 }
 
@@ -81,11 +83,12 @@
 getConfigurations().create("antlr3");
 
 dependencies {
-    compile     group: "org.antlr", name: "antlr",          version: "3.1.3"
-    testCompile group: "junit",     name: "junit",          version: "4.8.2"
-    antlr3      group: "org.antlr", name: "antlr-runtime",  version: "3.1.3"
-    antlr3      group: "org.antlr", name: "stringtemplate", version: "3.2"
-    antlr3      group: "org.antlr", name: "antlr",          version: "3.1.3"
+    compile     group: "org.antlr", name: "antlr",          version: "3.x"
+    compile     group: "org.antlr", name: "stringtemplate", version: "3.x"
+    testCompile group: "junit",     name: "junit",          version: "4.x"
+    antlr3      group: "org.antlr", name: "antlr-runtime",  version: "3.x"
+    antlr3      group: "org.antlr", name: "stringtemplate", version: "3.x"
+    antlr3      group: "org.antlr", name: "antlr",          version: "3.x"
 }
 
 // At the moment the ASM library shipped with Gradle that is used to
